---
apiVersion: apps/v1
items:
- metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: connectivity-domain-operator-release
      meta.helm.sh/release-namespace: wcm-system
    creationTimestamp: "2021-05-12T15:34:04Z"
    generation: 1
    labels:
      name: connectivity-domain-operator
      pod-template-hash: 7db4d7548
    name: connectivity-domain-operator-7db4d7548
    namespace: wcm-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: connectivity-domain-operator
      uid: 75cb9640-a70a-4d2b-a6f6-5598ca54606e
    resourceVersion: "2714"
    selfLink: /apis/apps/v1/namespaces/wcm-system/replicasets/connectivity-domain-operator-7db4d7548
    uid: dbf77d0f-6c54-4d43-8fc3-02638df94bec
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: connectivity-domain-operator
        pod-template-hash: 7db4d7548
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: connectivity-domain-operator
          pod-template-hash: 7db4d7548
      spec:
        containers:
        - command:
          - connectivity-domain-operator
          env:
          - name: WATCH_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: OPERATOR_NAME
            value: connectivity-domain-operator
          - name: CONFIG_PATH
            value: etc/connectivity-domain-configmap/config.yaml
          image: public.ecr.aws/ciscoeti/appn/connectivity-domain-operator:latest
          imagePullPolicy: IfNotPresent
          name: connectivity-domain-operator
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: etc/connectivity-domain-configmap/config.yaml
            name: config-data-connectivity-domain
            subPath: config.yaml
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: connectivity-domain-operator
        serviceAccountName: connectivity-domain-operator
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: connectivity-domain-configmap
          name: config-data-connectivity-domain
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: etcd-operator-release
      meta.helm.sh/release-namespace: wcm-system
    creationTimestamp: "2021-05-12T15:32:11Z"
    generation: 1
    labels:
      app: etcd-operator
      pod-template-hash: 84cf6bc5d5
    name: etcd-operator-84cf6bc5d5
    namespace: wcm-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: etcd-operator
      uid: cabc386e-545b-416f-8f20-ce04d09d9f61
    resourceVersion: "2038"
    selfLink: /apis/apps/v1/namespaces/wcm-system/replicasets/etcd-operator-84cf6bc5d5
    uid: faab53ca-804e-412d-9901-757658980757
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: etcd-operator
        pod-template-hash: 84cf6bc5d5
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: etcd-operator
          pod-template-hash: 84cf6bc5d5
      spec:
        containers:
        - command:
          - etcd-operator
          env:
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: quay.io/coreos/etcd-operator:v0.9.4
          imagePullPolicy: IfNotPresent
          name: etcd-operator
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: external-dns-release
      meta.helm.sh/release-namespace: wcm-system
    creationTimestamp: "2021-05-12T15:34:03Z"
    generation: 1
    labels:
      app: external-dns
      pod-template-hash: 849696cb6d
    name: external-dns-849696cb6d
    namespace: wcm-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: external-dns
      uid: a892130a-5123-47e6-99a4-05302cbc9ccf
    resourceVersion: "2672"
    selfLink: /apis/apps/v1/namespaces/wcm-system/replicasets/external-dns-849696cb6d
    uid: d2ac6517-ad8e-47c9-98fd-517dfcd02a93
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: external-dns
        pod-template-hash: 849696cb6d
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: external-dns
          pod-template-hash: 849696cb6d
      spec:
        containers:
        - args:
          - --log-level=debug
          - --source=service
          - --source=crd
          - --source=istio-virtualservice
          - --source=istio-gateway
          - --crd-source-apiversion=externaldns.k8s.io/v1alpha1
          - --crd-source-kind=DNSEndpoint
          - --publish-internal-services
          - --registry=noop
          - --policy=sync
          - --provider=coredns
          - --txt-owner-id=kind-1.kubeconfig
          env:
          - name: ETCD_URLS
            value: http://wcm-etcd-cluster-client.wcm-system:2379
          image: registry.opensource.zalan.do/teapot/external-dns:v0.7.6
          imagePullPolicy: IfNotPresent
          name: external-dns
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: external-dns
        serviceAccountName: external-dns
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: coredns-release
      meta.helm.sh/release-namespace: wcm-system
    creationTimestamp: "2021-05-12T15:34:02Z"
    generation: 1
    labels:
      app: coredns
      pod-template-hash: 7d7ccd5547
      release: my-coredns
    name: my-coredns-coredns-7d7ccd5547
    namespace: wcm-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: my-coredns-coredns
      uid: e4587508-ea21-4c29-9282-80f55c449066
    resourceVersion: "2624"
    selfLink: /apis/apps/v1/namespaces/wcm-system/replicasets/my-coredns-coredns-7d7ccd5547
    uid: a17095e4-f65a-4b70-86cf-5b31524870d8
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: coredns
        pod-template-hash: 7d7ccd5547
        release: my-coredns
    template:
      metadata:
        annotations:
          checksum/config: 00754626f8f4e5239ec2382866eacbad725e07e4e8ef778d703597e246a15b2c
        creationTimestamp: null
        labels:
          app: coredns
          pod-template-hash: 7d7ccd5547
          release: my-coredns
      spec:
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: coredns/coredns:1.3.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            protocol: UDP
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: my-coredns-coredns
        serviceAccountName: my-coredns-coredns
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: my-coredns-coredns
          name: config-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-05-12T16:12:09Z"
    generation: 1
    labels:
      app: wcm-nsr-red
      connectivitydomain: red
      pod-template-hash: 6458bd788d
    name: red-6458bd788d
    namespace: wcm-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: red
      uid: 50bf00ff-01ee-4503-b74b-7fb02d482ed2
    resourceVersion: "12294"
    selfLink: /apis/apps/v1/namespaces/wcm-system/replicasets/red-6458bd788d
    uid: cade09c0-43c4-4dbf-a4bb-8b44dcc97973
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: wcm-nsr-red
        connectivitydomain: red
        pod-template-hash: 6458bd788d
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: wcm-nsr-red
          connectivitydomain: red
          pod-template-hash: 6458bd788d
      spec:
        containers:
        - env:
          - name: POD_UID
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.uid
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: NSM_NAMESPACE
            value: wcm-system
          - name: INSECURE
            value: "false"
          - name: NSMRS_API_ADDRESS
            value: :31505
          - name: NSE_EXPIRATION_TIMEOUT
            value: 1h
          image: public.ecr.aws/ciscoeti/appn/nsmrs:vl3_latest
          imagePullPolicy: IfNotPresent
          name: red
          ports:
          - containerPort: 31505
            name: grpc-nsr
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run/spire/sockets
            name: spire-agent-socket
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: red-service-account
        serviceAccountName: red-service-account
        terminationGracePeriodSeconds: 30
        volumes:
        - hostPath:
            path: /run/spire/sockets
            type: DirectoryOrCreate
          name: spire-agent-socket
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-05-12T16:12:12Z"
    generation: 1
    labels:
      app: app-dns-publisher-red
      connectivitydomain: red
      pod-template-hash: 85c96d5565
    name: red-app-dns-publisher-85c96d5565
    namespace: wcm-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: red-app-dns-publisher
      uid: fc29ae56-6d94-4b46-9d6b-825307db55a0
    resourceVersion: "12388"
    selfLink: /apis/apps/v1/namespaces/wcm-system/replicasets/red-app-dns-publisher-85c96d5565
    uid: 862e54b5-e1b4-4e31-aa56-887f4cc853b5
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: app-dns-publisher-red
        connectivitydomain: red
        pod-template-hash: 85c96d5565
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: app-dns-publisher-red
          connectivitydomain: red
          pod-template-hash: 85c96d5565
      spec:
        containers:
        - args:
          - -n
          - wcm-system
          - -s
          - red-wcmd:50051
          - -d
          - red.nispatil-wcm-cisco.com
          - -i
          - "false"
          command:
          - /app/bin/app-dns-publisher-controller
          env:
          - name: POD_UID
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.uid
          - name: INSECURE
            value: "false"
          image: public.ecr.aws/ciscoeti/appn/app-dns-publisher-controller:latest
          imagePullPolicy: IfNotPresent
          name: red-app-dns-publisher
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run/spire/sockets
            name: spire-agent-socket
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: red-app-dns-publisher-service-account
        serviceAccountName: red-app-dns-publisher-service-account
        terminationGracePeriodSeconds: 30
        volumes:
        - hostPath:
            path: /run/spire/sockets
            type: DirectoryOrCreate
          name: spire-agent-socket
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      sidecar.jaegertracing.io/inject: "true"
    creationTimestamp: "2021-05-12T16:12:10Z"
    generation: 1
    labels:
      app: cd-info-red
      connectivitydomain: red
      pod-template-hash: 58bb5df4bd
    name: red-cd-info-58bb5df4bd
    namespace: wcm-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: red-cd-info
      uid: ffc5eca9-8970-4d6d-b878-8220e9950b12
    resourceVersion: "12348"
    selfLink: /apis/apps/v1/namespaces/wcm-system/replicasets/red-cd-info-58bb5df4bd
    uid: 0a48d2f5-559a-4f56-8a6f-973203f66df7
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: cd-info-red
        connectivitydomain: red
        pod-template-hash: 58bb5df4bd
    template:
      metadata:
        annotations:
          sidecar.jaegertracing.io/inject: "true"
        creationTimestamp: null
        labels:
          app: cd-info-red
          connectivitydomain: red
          pod-template-hash: 58bb5df4bd
      spec:
        containers:
        - env:
          - name: POD_UID
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.uid
          - name: JAEGER_SERVICE_NAME
            value: status.service.server
          - name: JAEGER_AGENT_HOST
            value: localhost
          - name: JAEGER_AGENT_PORT
            value: "6831"
          - name: JAEGER_REPORTER_LOG_SPANS
            value: "true"
          - name: INSECURE
            value: "false"
          image: public.ecr.aws/ciscoeti/appn/connectivity-domain-info:latest
          imagePullPolicy: IfNotPresent
          name: red-cd-info
          ports:
          - containerPort: 50071
            name: info-http
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/info-server-config/config.yaml
            name: red-cd-info-config-map
            subPath: ./config.yaml
          - mountPath: /run/spire/sockets
            name: spire-agent-socket
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: red-cd-info-service-account
        serviceAccountName: red-cd-info-service-account
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: red-cd-info-config-map
          name: red-cd-info-config-map
        - hostPath:
            path: /run/spire/sockets
            type: DirectoryOrCreate
          name: spire-agent-socket
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      sidecar.jaegertracing.io/inject: "true"
    creationTimestamp: "2021-05-12T16:12:10Z"
    generation: 1
    labels:
      app: wcmd-red
      connectivitydomain: red
      pod-template-hash: 58cf5b8d64
    name: red-wcmd-58cf5b8d64
    namespace: wcm-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: red-wcmd
      uid: 66475ec7-42df-4ce9-850d-e42784062988
    resourceVersion: "12363"
    selfLink: /apis/apps/v1/namespaces/wcm-system/replicasets/red-wcmd-58cf5b8d64
    uid: 7bece4ad-1e5f-4a07-a9af-47b2b82a9df0
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: wcmd-red
        connectivitydomain: red
        pod-template-hash: 58cf5b8d64
    template:
      metadata:
        annotations:
          sidecar.jaegertracing.io/inject: "true"
        creationTimestamp: null
        labels:
          app: wcmd-red
          connectivitydomain: red
          pod-template-hash: 58cf5b8d64
      spec:
        containers:
        - env:
          - name: POD_UID
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.uid
          - name: JAEGER_SERVICE_NAME
            value: wcmd.service.server
          - name: JAEGER_AGENT_HOST
            value: localhost
          - name: JAEGER_AGENT_PORT
            value: "6831"
          - name: JAEGER_REPORTER_LOG_SPANS
            value: "true"
          - name: INSECURE
            value: "false"
          - name: CONNECTIVITY_DOMAIN_NAME
            value: red
          image: public.ecr.aws/ciscoeti/appn/wcmd:latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /probe/alive
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: red-wcmd
          ports:
          - containerPort: 50061
            name: grpc-registry
            protocol: TCP
          - containerPort: 50051
            name: grpc-allocator
            protocol: TCP
          - containerPort: 8080
            name: probes
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /probe/ready
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/wcmd-server-config/config.yaml
            name: red-wcmd-config-map
            subPath: ./config.yaml
          - mountPath: /run/spire/sockets
            name: spire-agent-socket
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: red-wcmd-service-account
        serviceAccountName: red-wcmd-service-account
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: red-wcmd-config-map
          name: red-wcmd-config-map
        - hostPath:
            path: /run/spire/sockets
            type: DirectoryOrCreate
          name: spire-agent-socket
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
kind: ReplicaSetList
metadata:
  resourceVersion: "15118"
  selfLink: /apis/apps/v1/namespaces/wcm-system/replicasets
