---
apiVersion: v1
items:
- metadata:
    annotations:
      checksum/config: b87c6f1131bb038a15b05a738b78dda955b0290822dcb14a02398fab47c09a61
      checksum/dashboard-provider: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      checksum/secret: 0fe6e9b08b329b4654b84b00b22342a552dfeaa40e3576b353c36b2ad2dd2dd3
      kubernetes.io/psp: eks.privileged
    creationTimestamp: "2021-05-06T19:36:52Z"
    generateName: grafana-1620329806-5cd995bdb8-
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/instance: grafana-1620329806
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: grafana
      helm.sh/chart: grafana-5.2.11
      pod-template-hash: 5cd995bdb8
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
            f:checksum/dashboard-provider: {}
            f:checksum/secret: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c5560d94-f57d-48c9-9e46-3f5aa6a5c652"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"grafana"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"GF_SECURITY_ADMIN_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
              f:envFrom: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":3000,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/bitnami/grafana/data"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"data"}:
              .: {}
              f:name: {}
              f:persistentVolumeClaim:
                .: {}
                f:claimName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2021-05-06T19:36:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"192.168.85.134"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2021-05-06T19:37:56Z"
    name: grafana-1620329806-5cd995bdb8-v4dv4
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: grafana-1620329806-5cd995bdb8
      uid: c5560d94-f57d-48c9-9e46-3f5aa6a5c652
    resourceVersion: "2396914"
    selfLink: /api/v1/namespaces/default/pods/grafana-1620329806-5cd995bdb8-v4dv4
    uid: 67f87113-3c66-4a50-96b3-c01b21660f4a
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: grafana
                app.kubernetes.io/instance: grafana-1620329806
                app.kubernetes.io/name: grafana
            namespaces:
            - default
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - env:
      - name: GF_SECURITY_ADMIN_PASSWORD
        valueFrom:
          secretKeyRef:
            key: GF_SECURITY_ADMIN_PASSWORD
            name: grafana-1620329806-admin
      envFrom:
      - configMapRef:
          name: grafana-1620329806-envvars
      image: docker.io/bitnami/grafana:7.5.5-debian-10-r0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /api/health
          port: dashboard
          scheme: HTTP
        initialDelaySeconds: 120
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: grafana
      ports:
      - containerPort: 3000
        name: dashboard
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /api/health
          port: dashboard
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/bitnami/grafana/data
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: grafana-1620329806-token-6cjzt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-192-168-92-94.us-west-2.compute.internal
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      runAsNonRoot: true
      runAsUser: 1001
    serviceAccount: grafana-1620329806
    serviceAccountName: grafana-1620329806
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: data
      persistentVolumeClaim:
        claimName: grafana-1620329806
    - name: grafana-1620329806-token-6cjzt
      secret:
        defaultMode: 420
        secretName: grafana-1620329806-token-6cjzt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-06T19:36:58Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-06T19:37:56Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-06T19:37:56Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-06T19:36:58Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://d8c239f23928331b774cca056c4b0002b656169485aeae8181f9f53e3dcfd175
      image: bitnami/grafana:7.5.5-debian-10-r0
      imageID: docker-pullable://bitnami/grafana@sha256:7610cc45d2af5476b3018e8625be42670fa72100bb2255c4e9b097700080663f
      lastState: {}
      name: grafana
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-06T19:37:20Z"
    hostIP: 192.168.92.94
    phase: Running
    podIP: 192.168.85.134
    podIPs:
    - ip: 192.168.85.134
    qosClass: BestEffort
    startTime: "2021-05-06T19:36:58Z"
kind: PodList
metadata:
  resourceVersion: "3408528"
  selfLink: /api/v1/namespaces/default/pods
