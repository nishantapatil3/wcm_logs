---
apiVersion: apps/v1
items:
- metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: grafana-1620329806
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2021-05-06T19:36:52Z"
    generation: 1
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/instance: grafana-1620329806
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: grafana
      helm.sh/chart: grafana-5.2.11
      pod-template-hash: 5cd995bdb8
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"5287a146-0a9e-4be3-8b31-af176407a2f5"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app.kubernetes.io/component: {}
              f:app.kubernetes.io/instance: {}
              f:app.kubernetes.io/name: {}
              f:pod-template-hash: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:checksum/config: {}
                f:checksum/dashboard-provider: {}
                f:checksum/secret: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:helm.sh/chart: {}
                f:pod-template-hash: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"grafana"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"GF_SECURITY_ADMIN_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":3000,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/opt/bitnami/grafana/data"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"data"}:
                  .: {}
                  f:name: {}
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2021-05-06T19:37:56Z"
    name: grafana-1620329806-5cd995bdb8
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: grafana-1620329806
      uid: 5287a146-0a9e-4be3-8b31-af176407a2f5
    resourceVersion: "2396917"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/grafana-1620329806-5cd995bdb8
    uid: c5560d94-f57d-48c9-9e46-3f5aa6a5c652
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: grafana
        app.kubernetes.io/instance: grafana-1620329806
        app.kubernetes.io/name: grafana
        pod-template-hash: 5cd995bdb8
    template:
      metadata:
        annotations:
          checksum/config: b87c6f1131bb038a15b05a738b78dda955b0290822dcb14a02398fab47c09a61
          checksum/dashboard-provider: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
          checksum/secret: 0fe6e9b08b329b4654b84b00b22342a552dfeaa40e3576b353c36b2ad2dd2dd3
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: grafana
          app.kubernetes.io/instance: grafana-1620329806
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: grafana
          helm.sh/chart: grafana-5.2.11
          pod-template-hash: 5cd995bdb8
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: grafana
                    app.kubernetes.io/instance: grafana-1620329806
                    app.kubernetes.io/name: grafana
                namespaces:
                - default
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - env:
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: GF_SECURITY_ADMIN_PASSWORD
                name: grafana-1620329806-admin
          envFrom:
          - configMapRef:
              name: grafana-1620329806-envvars
          image: docker.io/bitnami/grafana:7.5.5-debian-10-r0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /api/health
              port: dashboard
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: grafana
          ports:
          - containerPort: 3000
            name: dashboard
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /api/health
              port: dashboard
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/bitnami/grafana/data
            name: data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          runAsNonRoot: true
          runAsUser: 1001
        serviceAccount: grafana-1620329806
        serviceAccountName: grafana-1620329806
        terminationGracePeriodSeconds: 30
        volumes:
        - name: data
          persistentVolumeClaim:
            claimName: grafana-1620329806
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
kind: ReplicaSetList
metadata:
  resourceVersion: "3408528"
  selfLink: /apis/apps/v1/namespaces/default/replicasets
